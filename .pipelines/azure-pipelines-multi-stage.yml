trigger: none
name: $(date:yyyyMMdd)$(rev:.r)

variables:
- group: 'Default'
- group: 'F5_dmz'
- group: 'IIS'
- group: 'modelo_core_mvc'
- group: 'Pipeline'
- group: 'Helix'
- group: 'SefazIdentity'

stages:
- stage: build
  displayName: 'Criação dos artefatos'
  jobs:
  - job:
    displayName: 'Build'
    pool:
      name: Visual Studio
    steps:
    - checkout: self
      clean: true
    - ${{ if or(eq(variables['Build.SourceBranch'], 'refs/heads/main'), eq(variables['Build.SourceBranch'], 'refs/heads/master')) }}:
      - task: SonarQubePrepare@4
        displayName: Prepare analysis on SonarQube
        continueOnError: True
        inputs:
          SonarQube: 86a0aeb0-42e0-4aeb-bb38-c46e0b00b615
          projectKey: Layout_Padrao_modelo_core_mvc_AYICN6jAipiVWg4CBkqP
          projectName: modelo_core_mvc
          extraProperties: "# Additional properties that will be passed to the scanner, \n# Put one key=value per line, example:\nsonar.exclusions=**/wwwroot/**, **/docker/**"
    - task: DotNetCoreCLI@2
      displayName: Restore
      inputs:
        command: restore
        projects: $(projectsToBuild)
        selectOrConfig: config
        feedRestore: 4eb34145-aff0-41ad-a936-1f3645390db5
        nugetConfigPath: D:\Nuget\nuget.config
        noCache: true
    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        projects: $(projectsToBuild)
        arguments: '--configuration $(BuildConfiguration) --no-restore '
    - ${{ if or(eq(variables['Build.SourceBranch'], 'refs/heads/main'), eq(variables['Build.SourceBranch'], 'refs/heads/master')) }}:
      - task: SonarQubeAnalyze@4
        displayName: Run Code Analysis
        continueOnError: True
      - task: SonarQubePublish@4
        displayName: Publish Quality Gate Result
        continueOnError: True
    - task: DotNetCoreCLI@2
      displayName: Publish
      inputs:
        command: publish
        publishWebProjects: false
        projects: $(projectsToBuild)
        arguments: --configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory) --no-build --no-restore
        zipAfterPublish: True
    - task: PublishBuildArtifacts@1
      displayName: Publish Artifact
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

- stage: Dev
  displayName: 'Deploy Dev'
  dependsOn: build
  condition: succeeded()
  variables:
  - group: 'modelo_core_mvc-webdesenv'
  - group: 'SefazIdentity-DEV'
  jobs:
  - deployment: IIS
    displayName: 'Dev'
    variables:
    - name: '_Web_Site_Nome'
      value: 'Seguro'
    environment: 
      name: Deploy-webdesenv
      resourceName: SRV72208
    strategy: 
      runOnce:
        deploy:
          steps:
          - download: current
            displayName: 'Download dos artefatos para o agent'
            env:
              NODE_TLS_REJECT_UNAUTHORIZED: 0
            artifact: drop
            patterns: '**/*.zip'
          - task: IISWebAppManagementOnMachineGroup@0
            displayName: 'IIS Web App Manage'
            inputs:
              IISDeploymentType: 'IISWebApplication'
              WebsiteName: '$(_Web_Site_Nome)'
              ParentWebsiteNameForVD: '$(_Web_Site_Nome)'
              VirtualPathForVD: '/$(_Nome_Aplicacao)'
              ParentWebsiteNameForApplication: '$(_Web_Site_Nome)'
              VirtualPathForApplication: '/$(_Nome_Aplicacao)'
              PhysicalPathForApplication: '$(_Local_IIS)\$(_Web_Site_Local)\$(_Nome_Aplicacao)'
              AddBinding: true
              Bindings: '{"bindings":[{"protocol":"http","ipAddress":"All Unassigned","port":"8088","hostname":"","sslThumbprint":"","sniFlag":false}]}'
              CreateOrUpdateAppPoolForApplication: true
              AppPoolNameForApplication: '$(_Nome_Aplicacao)'
              DotNetVersionForApplication: 'No Managed Code'
              AppPoolName: '$(_Nome_Aplicacao)'
              AppPoolNameForWebsite: '$(_Nome_Aplicacao)'
          - task: IISWebAppDeploymentOnMachineGroup@0
            displayName: 'IIS Web App Deploy'
            inputs:
              WebSiteName: '$(_Web_Site_Nome)'
              VirtualApplication: '$(_Nome_Aplicacao)'
              Package: '$(Pipeline.Workspace)/drop/**/*.zip'
              RemoveAdditionalFilesFlag: true
              ExcludeFilesFromAppDataFlag: true
              TakeAppOfflineFlag: true
              XmlVariableSubstitution: true
              JSONFiles: 'appsettings.json'
          - powershell: |
                  Write-Host "_________________________________________________________________ "
                  Write-Host "appsettings"
                  Write-Host ""
                  type $(_Local_IIS)\$(_Web_Site_Local)\$(_Nome_Aplicacao)\appsettings.json
                  
                  Write-Host "_________________________________________________________________ "
                  Write-Host "web.config"
                  Write-Host ""
                  type $(_Local_IIS)\$(_Web_Site_Local)\$(_Nome_Aplicacao)\web.config
                  
                  Write-Host "_________________________________________________________________ "
                  Write-Host "Dir $(_Local_IIS)\$(_Web_Site_Local)\$(_Nome_Aplicacao)"
                  Write-Host ""
                  Get-ChildItem -Path $(_Local_IIS)\$(_Web_Site_Local)\$(_Nome_Aplicacao)
                  
                  Write-Host "_________________________________________________________________ "
                  Write-Host "Dir $(_Local_IIS)\$(_Web_Site_Local)\$(_Nome_Aplicacao)\wwwroot\img"
                  Write-Host ""
                  Get-ChildItem -Path $(_Local_IIS)\$(_Web_Site_Local)\$(_Nome_Aplicacao)\wwwroot\img
            displayName: 'Verificação do arquivo de configuração'

- stage: CriacaoLiberacao
  displayName: 'Criação de Liberação e RDM HML'
  dependsOn: Dev
  condition: succeeded()
  jobs: 
  - deployment: AprovacaoHelix
    displayName: 'Criação da liberação e RDM HML'
    environment: AprovacaoDev
    pool:
      name: Release PRD
    strategy:
      runOnce:
        deploy:
          steps:
          - download: none
          - task: Helix - Criacao de Liberacao (RLM)@2
            displayName: 'Criação de Liberação'
            name: CriacaoLiberacao
            inputs:
              Sumario: 'Deploy automatizado - $(_Nome_Aplicacao)'
              Servico: '$(Servico_Helix)'
              loginResponsavel: '$(Scrum_Master)'
              Ambiente_Helix: '$(ambiente_helix)'
            env:
              SYSTEM_ACCESSTOKEN: $(System.AccessToken)

          - task: Helix - Criacao de Mudanca (RDM)@2
            displayName: 'Criação de RDM HML'
            inputs:
              SFZ_RDM_Sumario: 'Deploy automatizado - $(Nome_Aplicacao) em HML'
              Servico: '$(Servico_Helix)'
              Acompanhamento: 'nao'
              loginResponsavel: '$(Scrum_Master)'
              Ambiente_Deploy: 'hml'
              Ambiente_Helix: '$(ambiente_helix)'
              Grupo_Execucao: 'Infraestrutura'
            env:
              SYSTEM_ACCESSTOKEN: $(System.AccessToken)

- stage: Hml
  displayName: 'Deploy Hml'
  dependsOn: CriacaoLiberacao
  condition: succeeded()
  variables:
  - group: 'modelo_core_mvc-webhomolog'
  - group: 'SefazIdentity-DEV'
  jobs:
  - deployment: IIS
    displayName: 'Hml'
    variables:
    - name: '_Web_Site_Nome'
      value: 'seguro'
    - name: '_Nome_Aplicacao'
      value: 'modelo_core_mvc-hml'
    environment: 
      name: Deploy-webdesenv
      resourceName: SRV72208
    strategy: 
      runOnce:
        deploy:
          steps:
          - download: current
            displayName: 'Download dos artefatos para o agent'
            env:
              NODE_TLS_REJECT_UNAUTHORIZED: 0
            artifact: drop
            patterns: '**/*.zip'
          - task: IISWebAppManagementOnMachineGroup@0
            displayName: 'IIS Web App Manage'
            inputs:
              IISDeploymentType: 'IISWebApplication'
              WebsiteName: '$(_Web_Site_Nome)'
              ParentWebsiteNameForVD: '$(_Web_Site_Nome)'
              VirtualPathForVD: '/$(_Nome_Aplicacao)'
              ParentWebsiteNameForApplication: '$(_Web_Site_Nome)'
              VirtualPathForApplication: '/$(_Nome_Aplicacao)'
              PhysicalPathForApplication: '$(_Local_IIS)\$(_Web_Site_Local)\$(_Nome_Aplicacao)'
              AddBinding: true
              Bindings: '{"bindings":[{"protocol":"http","ipAddress":"All Unassigned","port":"8088","hostname":"","sslThumbprint":"","sniFlag":false}]}'
              CreateOrUpdateAppPoolForApplication: true
              AppPoolNameForApplication: '$(_Nome_Aplicacao)'
              DotNetVersionForApplication: 'No Managed Code'
              AppPoolName: '$(_Nome_Aplicacao)'
              AppPoolNameForWebsite: '$(_Nome_Aplicacao)'
          - task: IISWebAppDeploymentOnMachineGroup@0
            displayName: 'IIS Web App Deploy'
            inputs:
              WebSiteName: '$(_Web_Site_Nome)'
              VirtualApplication: '$(_Nome_Aplicacao)'
              Package: '$(Pipeline.Workspace)/drop/**/*.zip'
              RemoveAdditionalFilesFlag: true
              ExcludeFilesFromAppDataFlag: true
              TakeAppOfflineFlag: true
              XmlVariableSubstitution: true
              JSONFiles: 'appsettings.json'
          - powershell: |
                  Write-Host "_________________________________________________________________ "
                  Write-Host "appsettings"
                  Write-Host ""
                  type $(_Local_IIS)\$(_Web_Site_Local)\$(_Nome_Aplicacao)\appsettings.json
                  
                  Write-Host "_________________________________________________________________ "
                  Write-Host "web.config"
                  Write-Host ""
                  type $(_Local_IIS)\$(_Web_Site_Local)\$(_Nome_Aplicacao)\web.config
                  
                  Write-Host "_________________________________________________________________ "
                  Write-Host "Dir $(_Local_IIS)\$(_Web_Site_Local)\$(_Nome_Aplicacao)"
                  Write-Host ""
                  Get-ChildItem -Path $(_Local_IIS)\$(_Web_Site_Local)\$(_Nome_Aplicacao)
                  
                  Write-Host "_________________________________________________________________ "
                  Write-Host "Dir $(_Local_IIS)\$(_Web_Site_Local)\$(_Nome_Aplicacao)\wwwroot\img"
                  Write-Host ""
                  Get-ChildItem -Path $(_Local_IIS)\$(_Web_Site_Local)\$(_Nome_Aplicacao)\wwwroot\img
            displayName: 'Verificação do arquivo de configuração'

- stage: EncerramentoRDMHML
  displayName: 'Encerramento da RDM HML'
  dependsOn: CriacaoLiberacao
  jobs: 
  - deployment: AprovacaoHelix
    displayName: 'Encerramento da RDM HML'
    environment: AprovacaoDev
    pool:
      name: Release PRD
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: none
          - download: none
          - task: Helix - Encerramento de Mudanca (RDM)@2
            displayName: 'Encerramento da RDM HML'
            inputs:
              Ambiente_Deploy: 'hml'
              Ambiente_Helix: '$(ambiente_helix)'
            env:
              SYSTEM_ACCESSTOKEN: $(System.AccessToken)

- stage: CriacaoRDMPRD
  displayName: 'Criação de RDM PRD'
  dependsOn: EncerramentoRDMHML
  condition: succeeded()
  jobs: 
  - deployment: AprovacaoHelix
    displayName: 'Criação da RDM em produção'
    environment: AprovacaoDev
    pool:
      name: Release PRD
    strategy:
      runOnce:
        deploy:
          steps:
          - download: none
          - task: Helix - Criacao de Mudanca (RDM)@2
            displayName: 'Criação de RDM PRD'
            inputs:
              SFZ_RDM_Sumario: 'Deploy automatizado - $(Nome_Aplicacao) em HML'
              Servico: '$(Servico_Helix)'
              Acompanhamento: 'nao'
              loginResponsavel: '$(Scrum_Master)'
              Ambiente_Deploy: 'prd'
              Ambiente_Helix: '$(ambiente_helix)'
            env:
              SYSTEM_ACCESSTOKEN: $(System.AccessToken)

- stage: Prd
  displayName: 'Deploy Prd'
  dependsOn: CriacaoRDMPRD
  condition: succeeded()
  variables:
  - group: 'modelo_core_mvc-web'
  - group: 'SefazIdentity'
  jobs:
  - deployment: IIS
    displayName: 'Prd'
    variables:
    - name: '_Web_Site_Nome'
      value: 'seguro'
    - name: '_Nome_Aplicacao'
      value: 'modelo_core_mvc-prd'
    environment: 
      name: Deploy-webdesenv
      resourceName: SRV72208
    strategy: 
      runOnce:
        deploy:
          steps:
          - download: current
            displayName: 'Download dos artefatos para o agent'
            env:
              NODE_TLS_REJECT_UNAUTHORIZED: 0
            artifact: drop
            patterns: '**/*.zip'
          - task: IISWebAppManagementOnMachineGroup@0
            displayName: 'IIS Web App Manage'
            inputs:
              IISDeploymentType: 'IISWebApplication'
              WebsiteName: '$(_Web_Site_Nome)'
              ParentWebsiteNameForVD: '$(_Web_Site_Nome)'
              VirtualPathForVD: '/$(_Nome_Aplicacao)'
              ParentWebsiteNameForApplication: '$(_Web_Site_Nome)'
              VirtualPathForApplication: '/$(_Nome_Aplicacao)'
              PhysicalPathForApplication: '$(_Local_IIS)\$(_Web_Site_Local)\$(_Nome_Aplicacao)'
              AddBinding: true
              Bindings: '{"bindings":[{"protocol":"http","ipAddress":"All Unassigned","port":"8088","hostname":"","sslThumbprint":"","sniFlag":false}]}'
              CreateOrUpdateAppPoolForApplication: true
              AppPoolNameForApplication: '$(_Nome_Aplicacao)'
              DotNetVersionForApplication: 'No Managed Code'
              AppPoolName: '$(_Nome_Aplicacao)'
              AppPoolNameForWebsite: '$(_Nome_Aplicacao)'
          - task: IISWebAppDeploymentOnMachineGroup@0
            displayName: 'IIS Web App Deploy'
            inputs:
              WebSiteName: '$(_Web_Site_Nome)'
              VirtualApplication: '$(_Nome_Aplicacao)'
              Package: '$(Pipeline.Workspace)/drop/**/*.zip'
              RemoveAdditionalFilesFlag: true
              ExcludeFilesFromAppDataFlag: true
              TakeAppOfflineFlag: true
              XmlVariableSubstitution: true
              JSONFiles: 'appsettings.json'
          - powershell: |
                  Write-Host "_________________________________________________________________ "
                  Write-Host "appsettings"
                  Write-Host ""
                  type $(_Local_IIS)\$(_Web_Site_Local)\$(_Nome_Aplicacao)\appsettings.json
                  
                  Write-Host "_________________________________________________________________ "
                  Write-Host "web.config"
                  Write-Host ""
                  type $(_Local_IIS)\$(_Web_Site_Local)\$(_Nome_Aplicacao)\web.config
                  
                  Write-Host "_________________________________________________________________ "
                  Write-Host "Dir $(_Local_IIS)\$(_Web_Site_Local)\$(_Nome_Aplicacao)"
                  Write-Host ""
                  Get-ChildItem -Path $(_Local_IIS)\$(_Web_Site_Local)\$(_Nome_Aplicacao)
                  
                  Write-Host "_________________________________________________________________ "
                  Write-Host "Dir $(_Local_IIS)\$(_Web_Site_Local)\$(_Nome_Aplicacao)\wwwroot\img"
                  Write-Host ""
                  Get-ChildItem -Path $(_Local_IIS)\$(_Web_Site_Local)\$(_Nome_Aplicacao)\wwwroot\img
            displayName: 'Verificação do arquivo de configuração'

- stage: EncerramentoRDMPRD
  displayName: 'Encerramento da RDM PRD'
  dependsOn: CriacaoRDMPRD
  jobs: 
  - deployment: AprovacaoHelix
    displayName: 'Encerramento da RDM PRD'
    environment: AprovacaoDev
    pool:
      name: Release PRD
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: none
          - download: none
          - task: Helix - Encerramento de Mudanca (RDM)@2
            displayName: 'Encerramento da RDM PRD'
            inputs:
              Ambiente_Deploy: 'prd'
              Ambiente_Helix: '$(ambiente_helix)'
            env:
              SYSTEM_ACCESSTOKEN: $(System.AccessToken)

- stage: EncerramentoLiberacao
  displayName: 'Encerramento da Liberacao'
  dependsOn: EncerramentoRDMHML
  jobs: 
  - deployment: AprovacaoHelix
    displayName: 'Encerramento da Liberação'
    environment: AprovacaoDev
    pool:
      name: Release PRD
    strategy:
      runOnce:
        deploy:
          steps:
          - download: none
          - task: Helix - Encerramento de Liberacao (RLM)@2
            displayName: 'Encerramento da Liberação'
            inputs:
              Ambiente_Helix: '$(ambiente_helix)'
            env:
              SYSTEM_ACCESSTOKEN: $(System.AccessToken)