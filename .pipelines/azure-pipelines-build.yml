# Fortify Security Continuos Integration Gate
# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

#trigger:
#- main

#pool:
#  name: default

#steps:
#- script: echo Hello, world!
#  displayName: 'Run a one-line script'

#- script: |
#    echo Add other tasks to build, test, and deploy your project.
#    echo See https://aka.ms/yaml
#  displayName: 'Run a multi-line script'

trigger: none
name: $(date:yyyyMMdd)$(rev:.r)

stages:
- stage: Build
  jobs:
  - ${{ if or(eq(variables['Build.SourceBranch'], 'refs/heads/main'), eq(variables['Build.SourceBranch'], 'refs/heads/master')) }}:
    - job: Fortify
      displayName: 'Fortify Security Continuos Integration'

      variables:
      - group: Fortify-ScanCentral
      - name: SSC_PROJECTNAME
        value: 'ICT-modelo_core_mvc'
      - name: SSC_PROJECTVERSION
        value: 'master'
      - name: newProject
        value: 'true'

      pool:
        name: Fortify-SCA

      steps:
      - checkout: self
        clean: true

      - task: FortifyScanCentralSAST@7
        displayName: Fortify ScanCentral SAST Assessment
        inputs:
          scanCentralCtrlUrl: 'https://ssc-fortify.intra.fazenda.sp.gov.br:8444/scancentral-ctrl'
          scanCentralClientToken: '$(ScanCentral.ClientToken)'
          sscUrl: 'https://ssc-fortify.intra.fazenda.sp.gov.br:8443/ssc'
          sscCiToken: 'dae18f45-818b-4ffb-bbab-43d3ef144769'
          uploadToSSC: true
          applicationName: '$(SSC_PROJECTNAME)'
          applicationVersion: '$(SSC_PROJECTVERSION)'
          buildFailureCriteria: '[fortify priority order]:critical [fortify priority order]:high'
          buildTool: 'none'
          email: 'devsec_fortify@fazenda.sp.gov.br'
          block: true
          outputFile: '$(SSC_PROJECTNAME).fpr'
          logFile: '$(SSC_PROJECTNAME).log'
          overwrite: true
      - task: dependency-check-build-task@6
        displayName: Dependency Check
        inputs:
          projectName: '$(SSC_PROJECTNAME)'
          scanPath: '$(Pipeline.Workspace)/s'
          format: 'HTML, JUNIT'
          uploadReports: true
          failOnCVSS: '6'
          warnOnCVSSViolation: true
          enableVerbose: true
          additionalArguments: '--disableOssIndex --disableNodeAudit --noupdate --exclude **/*.zip --exclude **/*.jar --disableCentral'
          localInstallPath: 'D:\dependency-check\'
      - task: PublishTestResults@2
        displayName: Publish Test Results *junit.xml
        inputs:
          testResultsFormat: 'JUnit'
          testResultsFiles: '*junit.xml'
          searchFolder: '$(Common.TestResultsDirectory)\dependency-check\'
          testRunTitle: '$(SSC_PROJECTNAME)'

  - job: Build
    displayName: 'Build'
    pool:
      name: Visual Studio
    steps:
    - checkout: self
      clean: true
    - ${{ if or(eq(variables['Build.SourceBranch'], 'refs/heads/main'), eq(variables['Build.SourceBranch'], 'refs/heads/master')) }}:
      - task: SonarQubePrepare@4
        displayName: Prepare analysis on SonarQube
        continueOnError: True
        inputs:
          SonarQube: 86a0aeb0-42e0-4aeb-bb38-c46e0b00b615
          projectKey: Layout_Padrao_modelo_core_mvc_AYICN6jAipiVWg4CBkqP
          projectName: modelo_core_mvc
          extraProperties: "# Additional properties that will be passed to the scanner, \n# Put one key=value per line, example:\nsonar.exclusions=**/wwwroot/**, **/docker/**"
    - task: DotNetCoreCLI@2
      displayName: Restore
      inputs:
        command: restore
        projects: $(projectsToBuild)
        selectOrConfig: config
        feedRestore: 4eb34145-aff0-41ad-a936-1f3645390db5
        nugetConfigPath: D:\Nuget\nuget.config
        noCache: true
    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        projects: $(projectsToBuild)
        arguments: '--configuration $(BuildConfiguration) --no-restore '
    - ${{ if or(eq(variables['Build.SourceBranch'], 'refs/heads/main'), eq(variables['Build.SourceBranch'], 'refs/heads/master')) }}:
      - task: SonarQubeAnalyze@4
        displayName: Run Code Analysis
        continueOnError: True
      - task: SonarQubePublish@4
        displayName: Publish Quality Gate Result
        continueOnError: True
    - task: DotNetCoreCLI@2
      displayName: Publish
      inputs:
        command: publish
        publishWebProjects: false
        projects: $(projectsToBuild)
        arguments: --configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory) --no-build --no-restore
        zipAfterPublish: True
    - task: PublishBuildArtifacts@1
      displayName: Publish Artifact
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

