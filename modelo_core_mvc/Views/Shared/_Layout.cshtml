<!DOCTYPE html>
<html lang="pt-br">

@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration

@{
    var cookies = Context.Request.Cookies;
    var estaRecolhido = cookies.ContainsKey("classe|painelLateral|recolhido") && cookies["classe|painelLateral|recolhido"] == "true";
    int valorMudanca = 0;
    var valorZoom = "1";
    double[] valores = { 1, 1.1, 1.3, 1.5, 1.75, 1.9 };
    if (cookies.ContainsKey("valorMudanca"))
    {
        valorMudanca = int.Parse(cookies["valorMudanca"]);
        valorZoom = valores[valorMudanca].ToString("F", System.Globalization.CultureInfo.InvariantCulture);
    }

    var contrastState = "false";
    if (cookies.ContainsKey("contrastState"))
    {
        contrastState = cookies["contrastState"];
    }
}

<head>
    <title>@ViewData["Title"]</title>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/x-icon" href="https://dev-cdn-caeeh2eyhmh6cbd4.z01.azurefd.net/v01/img/BRASAO_GOV_SP_Original.svg">
    <link rel="stylesheet" href="~/css/styles.css">

    @*Application Insights*@
    <script>
        var appInsightsConnectionString = "@Configuration["ApplicationInsights:ConnectionString"]";
    </script>
    <script src="~/js/appInsights.js"></script>
</head>

<body style="zoom: @valorZoom;">
    <script src="~/js/acessibilidade.js?v=@DateTime.Now.Ticks"></script>
    <script>
        window.addEventListener('DOMContentLoaded', function () {
            contrastState = @contrastState;
            valorMudanca = @valorMudanca;
            alterarZoom();
        });
    </script>

    <div id="aplicacao" 
         role="application"
         tabindex="0">
        <header id="cabecalhoMobile" class="painelCabecalho" aria-label="Cabeçalho Mobile">
            <partial name="_Cabecalho" />
        </header>

        <div id="painelAplicacao" role="region">
            <section id="painelLateral" role="region" class="oculto @(estaRecolhido ? "recolhido" : "")" aria-label="Painel Lateral">
                <div id="brasaoPainel" role="group">
                    <div id="fundoBrasaoDesktop" class="fundoBrasao">
                        <img class="brasao" src="https://devbsacdn.blob.core.windows.net/v01/img/BRASAO_GOV_SP_Original.svg" alt="Brasão do Estado de São Paulo">
                    </div>
                    <span id="orgao">Secretaria da Fazenda e Planejamento</span>
                </div>
                <button id="botaoExpandir"
                        title="Botao para expandir ou recolher o menu (<alt @(estaRecolhido ? "." : ",")>)"
                        aria-label="Botão para expandir ou recolher o menu (<alt @(estaRecolhido ? "." : ",")>)"
                        onclick="alternarClasse(['painelLateral', 'iconeExpandir', 'iconeRecolher'],'recolhido'); atualizarAtributosBotaoExpandir()">
                    <span id="iconeExpandir" class="@(!estaRecolhido ? "recolhido" : "")">
                        <i class="fas fa-angle-right"></i>
                    </span>
                    <span id="iconeRecolher" class="@(estaRecolhido ? "recolhido" : "")">
                        <i class="fas fa-angle-left"></i>
                    </span>
                </button>

                <nav id="menuLateral" onclick="alternarClasse(['painelLateral', 'painelPrincipal'],'oculto',false)" aria-label="Menu Lateral">
                    <partial name="_ItensMenu" />
                </nav>
            </section>

            <section id="painelPrincipal" role="group" class="@(estaRecolhido ? "recolhido" : "")">
                <header id="cabecalhoDesktop" class="painelCabecalho">
                    <partial name="_Cabecalho" />
                    <nav id="menuPopup"
                         class="oculto"
                         tabindex="-1"
                         aria-label="Menu Popup"
                         onmouseleave="alternarClasse(['menuPopup'],'oculto',true)">
                        <partial name="_ItensMenu" />
                    </nav>
                </header>

                <div id="painelConteudo" role="region">
                    <partial name="_BreadCrumb" />

                    <main id="conteudo" class="shadow" tabindex="0" aria-label="Conteúdo Principal">
                        @RenderBody()
                    </main>
                </div>

                <div id="topoDaPagina"
                     title="Voltar ao topo da página"
                     aria-label="Voltar ao topo da página"
                     role="button">
                    <a href="#">
                        Topo da página
                    </a>
                </div>

                <div id="mensagemErro" role="alert" aria-label="Mensagem de Erro">
                    @if (ViewData["Erro"] != null)
                    {
                        @ViewData["Erro"]
                    }
                </div>
            </section>
        </div>
    </div>

    <partial name="_Aguarde" />
    <partial name="_Scripts" />

    @RenderSection("Scripts", required: false)
</body>

</html>
